{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SML",
	"patterns": [
		{
			"include": "#table-value"
		}
	],
	"repository": {
		"array": {
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.array.begin.sml"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "keyword.operator.array.end.sml"
				}
			},
			"name": "meta.structure.array.sml",
			"patterns": [
				{
					"comment": "Optional comment",
					"include": "#line-comment"
				},
				{
					"include": "#array-value"
				}
			]
		},
		"array-value": {
			"name": "meta.structure.array-value.json",
			"patterns": [
				{
					"comment": "The SML array value",
					"include": "#value"
				},
				{
					"comment": "Optional comma",
					"name": "keyword.operator.delimiter.comma.sml",
					"match": ","
				}
			]
		},
		"boolean-literal": {
			"name": "constant.language.boolean.sml",
			"match": "(true|false)"
		},
		"key": {
			"patterns": [
				{
					"include": "#key-literal"
				},
				{
					"include": "#key-string-literal"
				}
			]
		},
		"key-literal": {
			"name": "variable.other.key.sml",
			"match": "[A-Za-z0-9]+"
		},
		"key-string-literal": {
			"name": "variable.other.key.sml",
			"begin": "(')",
			"end": "(')",
			"patterns": [
				{
					"name": "constant.character.escape.sml",
					"match": "\\\\."
				}
			]
		},
		"language-reference": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.language-reference.begin.sml"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "keyword.operator.language-reference.end.sml"
				}
			},
			"name": "meta.structure.language-reference.sml",
			"patterns": [
				{
					"match": "([A-Za-z0-9+#]+)(@[0-9]+(?:\\.[0-9]+)?)",
					"captures":
					{
						"1": { "name": "entity.name.type.language-name.sml" },
						"2": { "name": "keyword.control.version-reference.sml" }
					},
					"name": "meta.structure.language-reference.sml"
				}
			]
		},
		"line-comment": {
			"name": "comment.line.number-sign.sml",
			"match": "((#).*)$"
		},
		"number-literal": {
			"name": "constant.numeric.sml",
			"match": "[0-9]+(\\.[0-9]+)?"
		},
		"package-reference": {
			"begin": "\\<",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.package-reference.begin.sml"
				}
			},
			"end": "\\>",
			"endCaptures": {
				"0": {
					"name": "keyword.operator.package-reference.end.sml"
				}
			},
			"name": "meta.structure.package-reference.sml",
			"patterns": [
				{
					"match": "(?:([A-Za-z0-9+#]+)\\|)?([A-Za-z0-9]+)\\|([A-Za-z0-9\\.]+)?(@[0-9]+(?:\\.[0-9]+)?)?",
					"captures":
					{
						"1": { "name": "entity.name.type.language-name.sml" },
						"2": { "name": "entity.name.function.user-name.sml" },
						"3": { "name": "entity.name.function.package-name.sml" },
						"4": { "name": "keyword.control.version-reference.sml" }
					},
					"name": "meta.structure.package-reference.sml"
				}
			]
		},
		"string-literal": {
			"name": "string.quoted.single.sml",
			"begin": "(')",
			"end": "(')",
			"patterns": [
				{
					"name": "constant.character.escape.sml",
					"match": "\\\\."
				}
			]
		},
		"table": {
			"begin": "(\\{)",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.table.begin.sml"
				}
			},
			"end": "(\\})",
			"endCaptures": {
				"0": {
					"name": "keyword.operator.table.end.sml"
				}
			},
			"name": "meta.structure.table.sml",
			"patterns": [
				{
					"include": "#table-value"
				}
			]
		},
		"table-value": {
			"name": "meta.structure.table-value.sml",
			"patterns": [
				{
					"comment": "Optional comment",
					"include": "#line-comment"
				},
				{
					"comment": "The SML table key",
					"include": "#key"
				},
				{
					"comment": "Scope value to differentiate from keys. Ends with any delimiter type, but lookahead for end of table.",
					"begin": "(:)",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.separator.table.key-value.sml"
						}
					},
					"end": "(,)|(\n)|(?=\\})",
					"endCaptures": {
						"0": {
							"name": "keyword.operator.delimiter.comma.sml"
						}
					},
					"patterns": [
						{
							"comment": "Optional comment",
							"include": "#line-comment"
						},
						{
							"include": "#value"
						}
					]
				}
			]
		},
		"version-literal": {
			"name": "keyword.control.version.sml",
			"match": "[0-9]+\\.[0-9]+\\.[0-9]+"
		},
		"value": {
			"patterns": [
				{
					"include": "#boolean-literal"
				},
				{
					"include": "#version-literal"
				},
				{
					"include": "#number-literal"
				},
				{
					"include": "#string-literal"
				},
				{
					"include": "#array"
				},
				{
					"include": "#table"
				},
				{
					"include": "#package-reference"
				},
				{
					"include": "#language-reference"
				}
			]
		}
	},
	"scopeName": "source.sml"
}